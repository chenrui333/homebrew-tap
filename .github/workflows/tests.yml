name: Build and Test Formulae

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  HOMEBREW_DEVELOPER: 1
  HOMEBREW_GITHUB_ACTIONS: 1
  HOMEBREW_NO_AUTO_UPDATE: 1
  HOMEBREW_NO_INSTALL_FROM_API: 1
  HOMEBREW_RELOCATABLE_INSTALL_NAMES: 1
  HOMEBREW_ARM64_TESTING: 1

concurrency:
  group: "build-${{ github.ref }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  tap-syntax:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/homebrew/ubuntu22.04:main@sha256:44e58b84265112338d7f94746609aa5e29c7607e4f7df3163ae71b12009225b5
    env:
      HOMEBREW_SIMULATE_MACOS_ON_LINUX: 1
    outputs:
      testing_formulae: ${{ steps.formulae-detect.outputs.testing_formulae }}
      added_formulae: ${{ steps.formulae-detect.outputs.added_formulae }}
      deleted_formulae: ${{ steps.formulae-detect.outputs.deleted_formulae }}
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
        with:
          core: true
          cask: false

      - run: brew test-bot --only-tap-syntax
        continue-on-error: true # Skip due to license check issues

      - run: brew test-bot --only-formulae-detect
        id: formulae-detect

  set-environment:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-24.04
    needs: tap-syntax
    outputs:
      syntax-only: ${{ steps.check-labels.outputs.syntax-only }}
      linux-runner: ${{ steps.check-labels.outputs.linux-runner }}
      linux-arm64-runner: ${{ steps.check-labels.outputs.linux-arm64-runner }}
      fail-fast: ${{ steps.check-labels.outputs.fail-fast }}
      timeout-minutes: ${{ steps.check-labels.outputs.timeout-minutes }}
      container: ${{ steps.check-labels.outputs.container }}
      test-bot-formulae-args: ${{ steps.check-labels.outputs.test-bot-formulae-args }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Check for CI labels
        id: check-labels
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8
        env:
          SCRIPTS_PATH: .github/scripts
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const path = require('path')
            const script = require(path.resolve(`${process.env.SCRIPTS_PATH}/environment.js`))
            const formula_detect = {
              testing_formulae: '${{needs.tap-syntax.outputs.testing_formulae}}',
              added_formulae: '${{needs.tap-syntax.outputs.added_formulae}}',
              deleted_formulae: '${{needs.tap-syntax.outputs.deleted_formulae}}'
            }
            try {
              await script({github, context, core}, formula_detect)
            } catch (error) {
              console.error(error);
            }

  build-formula:
    needs: [tap-syntax, set-environment]
    if: |
      always() &&
      !cancelled() &&
      (needs.tap-syntax.result == 'success' || needs.tap-syntax.result == 'skipped') &&
      (needs.set-environment.result == 'success' || needs.set-environment.result == 'skipped') &&
      (github.event_name != 'pull_request' || needs.set-environment.outputs.syntax-only != 'true')
    strategy:
      matrix:
        include:
          - runner: 'macos-26'
            cleanup: true
          - runner: 'macos-15'
            cleanup: true
          - runner: 'macos-14'
            cleanup: true
          - runner: 'macos-15-intel'
            cleanup: true
          - runner: ${{ github.event_name == 'pull_request' && needs.set-environment.outputs.linux-runner || 'ubuntu-22.04' }}
            container: ${{ github.event_name == 'pull_request' && fromJson(needs.set-environment.outputs.container) || fromJson('{"image":"ghcr.io/homebrew/ubuntu22.04:main","options":"--user=linuxbrew"}') }}
            workdir: /github/home
            cleanup: false
            timeout: 4320
          - runner: ${{ github.event_name == 'pull_request' && needs.set-environment.outputs.linux-arm64-runner || 'ubuntu-22.04-arm' }}
            container: ${{ github.event_name == 'pull_request' && fromJson(needs.set-environment.outputs.container) || fromJson('{"image":"ghcr.io/homebrew/ubuntu22.04:main","options":"--user=linuxbrew"}') }}
            workdir: /github/home
            cleanup: false
            timeout: 4320
      fail-fast: ${{ github.event_name == 'pull_request' && fromJson(needs.set-environment.outputs.fail-fast) || false }}
    runs-on: ${{matrix.runner}}
    container: ${{matrix.container}}
    timeout-minutes: ${{ matrix.timeout || (github.event_name == 'pull_request' && fromJson(needs.set-environment.outputs.timeout-minutes) || 240) }}
    defaults:
      run:
        shell: /bin/bash -e {0}
        working-directory: ${{matrix.workdir || github.workspace}}
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      HOMEBREW_GITHUB_API_TOKEN: ${{secrets.HOMEBREW_GITHUB_API_TOKEN}}
      BOTTLES_DIR: ${{matrix.workdir || github.workspace}}/bottles
    steps:
      - name: Pre-test steps
        uses: Homebrew/actions/pre-build@master
        with:
          bottles-directory: ${{ env.BOTTLES_DIR }}
          cleanup: ${{ matrix.cleanup }}

      - name: Run brew test-bot
        id: brew-test-bot-formulae
        working-directory: ${{ env.BOTTLES_DIR }}
        run: |
          # Set Linux-specific environment variables if running on Linux
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            export HOMEBREW_PREFIX=/home/linuxbrew/.linuxbrew
            export HOMEBREW_REPOSITORY=/home/linuxbrew/.linuxbrew/Homebrew
            export HOMEBREW_CELLAR=/home/linuxbrew/.linuxbrew/Cellar
            export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"
          fi

          # Use custom args for PR events, default args otherwise
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            brew test-bot ${{ needs.set-environment.outputs.test-bot-formulae-args }}
          else
            brew test-bot --only-formulae --skip-recursive-dependents --root-url="https://ghcr.io/v2/chenrui333/tap"
          fi

      - name: Post-build steps
        if: always()
        uses: Homebrew/actions/post-build@master
        with:
          runner: ${{ matrix.runner }}
          cleanup: ${{ matrix.cleanup }}
          bottles-directory: ${{ env.BOTTLES_DIR }}
          logs-directory: ${{ format('{0}/logs', env.BOTTLES_DIR) }}

  label-pr:
    needs: build-formula
    if: success() && github.event_name == 'pull_request'
    runs-on: ubuntu-24.04
    permissions:
      pull-requests: write
    steps:
      - name: Check if PR has 'in progress' label
        id: check-label
        run: |
          LABELS=$(gh pr view "${{ github.event.pull_request.number }}" --repo "${{ github.repository }}" --json labels --jq '.labels[].name')
          if echo "$LABELS" | grep -q "^in progress$"; then
            echo "skip_label=true" >> "$GITHUB_ENV"
          else
            echo "skip_label=false" >> "$GITHUB_ENV"
          fi
        env:
          GH_TOKEN: ${{ secrets.HOMEBREW_GITHUB_API_TOKEN }}

      - name: Label the PR with 'pr-pull'
        if: env.skip_label == 'false'
        run: gh pr edit "${{ github.event.pull_request.number }}" --add-label 'pr-pull' --repo "${{ github.repository }}"
        env:
          GH_TOKEN: ${{ secrets.HOMEBREW_GITHUB_API_TOKEN }}
